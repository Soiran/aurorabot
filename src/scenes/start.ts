import Scene from '../scene';
import { bot } from '../index';
import { Keyboard } from 'vk-io';
import ProfileView from './profile/view';

export default class StartScene extends Scene {
    constructor() {
        super(
            async scene => {
                let user = scene.user;
                let profile = user.profile;
                let exists = await profile.exists();
                if (exists) {
                    bot.sendMessage({
                        message: '–ü—Ä–∏–≤–µ—Ç, —Ö–æ—á–µ—à—å –Ω–∞–π—Ç–∏ –∫–æ–≥–æ-—Ç–æ –µ—â–µ?',
                        peer_id: scene.user.id,
                        keyboard: Keyboard.builder().textButton({
                            label: 'üëç',
                            color: Keyboard.POSITIVE_COLOR
                        })
                    });
                    user.setScene(ProfileView);
                    scene.end();
                } else {
                    bot.sendMessage({
                        message: '–ü—Ä–∏–≤–µ—Ç, —è –ê–≤—Ä–æ—Ä–∞, —Ç–≤–æ–π –ø–æ–º–æ—â–Ω–∏–∫ –≤ –ø–æ–∏—Å–∫–µ –ª—é–¥–µ–π. –ù–∞—á–Ω–µ–º?',
                        peer_id: scene.user.id,
                        keyboard: Keyboard.builder().textButton({
                            label: 'üëç',
                            color: Keyboard.POSITIVE_COLOR
                        })
                    });
                }
            },
            [
                (message, scene) => {
                    bot.sendMessage({
                        message: '–≠—Ç–æ –≤–µ—Å—å —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª, –∫–æ—Ç–æ—Ä—ã–π –∏–º–µ–µ—Ç—Å—è –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç ;)',
                        peer_id: scene.user.id,
                    });
                    scene.end();
                }
            ]
        );
    }
}